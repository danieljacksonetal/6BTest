@using SixBeeAppointments.Data;
@inject IAppointmentService AppointmentService

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@appointment" OnSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group m-3">
                        <label for="name">Name: </label>
                        <InputText id="name" @bind-Value="@appointment.Name"></InputText>
                    </div>
                    <div class="form-group m-3">
                        <label for="appointment-date">Appointment:</label>
                        <InputDate id="appointment-date" @bind-Value="@appointment.AppointmentDate"></InputDate>
                    </div>
                    <div class="form-group m-3">
                        <label for="issue">Issue:</label>
                        <InputText id="todo-important" @bind-Value="@appointment.Issue"></InputText>
                    </div>
                    <div class="form-group m-3">
                        <label for="contact-number">Contact Number:</label>
                        <InputText id="contact-number" @bind-Value="@appointment.ContactNumber"></InputText>
                    </div>
                    <div class="form-group m-3">
                        <label for="email">Email:</label>
                        <InputText id="email" @bind-Value="@appointment.Email"></InputText>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary" @onclick="@HandleValidSubmit">Submit</button>
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    
    private Appointment appointment = new();

    protected async Task HandleValidSubmit()
    {
        await AppointmentService.CreateAppointmentAsync(appointment);

        //appointments.Append(appointment);
    }

    private void HandleInvalidSubmit()
    {
        // statusClass = "alert-danger";
        // message = "Show a meaningful error message.";
    }

    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}